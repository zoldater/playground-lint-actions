name: reviewdog 

on: [pull_request]

jobs:
  golangci-lint:
    name: runner / golangci-lint
    runs-on: ubuntu-20.04
    permissions: write-all
    steps:
      # Checkout sources
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # tag=v3.3.0

      - uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reviewdog_version: v0.14.1
          fail_on_error: true
          level: error
          reporter: github-pr-review
          # filter_mode: nofilter
          golangci_lint_flags: "--new-from-rev=HEAD~"

  clang-format:
    runs-on: ubuntu-20.04
    steps:
        # Checkout sources
        - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # tag=v3.3.0

        # Setup reviewdog
        - name: Setup reviewdog tool
          id: setup-reviewdog
          uses: reviewdog/action-setup@v1
          with:
            reviewdog_version: v0.14.1
        # Collect changed or added files changed files
        - uses: technote-space/get-diff-action@f27caffdd0fb9b13f4fc191c016bb4e0632844af # tag=v6.1.1
        # Execute clang-format against each diff in the branch and post results to reviewdog
        - name: Check clang-format
          shell: bash
          env:
            REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          run: |
            for filename in "${{ env.GIT_DIFF }}"
            do
              formatted="$(docker run -i -v "$(pwd)":"$(pwd)" -w "$(pwd)" --rm ghcr.io/jidicula/clang-format:"$CLANG_FORMAT_VERSION" --style=Google "${filename}")"
              local_format="$(diff -q <(cat "${filepath}") <(echo "${formatted}"))"
              local format_status="$?"
              if [[ ${format_status} -ne 0 ]]; then
                reviewdog -name=clang-format-check -f=diff -fail-on-error=true -reporter=github-pr-review "${local_format}"
              fi
            done
  #
  # py-format:
  #     runs-on: ubuntu-20.04
  #     needs: setup
          #
